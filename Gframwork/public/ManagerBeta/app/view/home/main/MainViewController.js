/*
 * File: app/view/home/main/MainViewController.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GFManager.view.home.main.MainViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.main',

    createTab: function(prefix, record, cfg) {
        var tabs	= this.lookupReference('maintabeditpanel');
        var id, tab;


        if(record === null) {

            id = prefix + '_edittab';

        } else {

            id = record.get('id');
        }

        tab = tabs.items.getByKey(id);


        if(tab){
            // @TODO: before closing the tab, check to exist any change in the form.
            // so, if some change is detected, display a dialog to ask to a user
            //cfg.itemId = id;
            cfg.closable = true;

            tabs.setActiveTab(tab);

        } else {

            cfg.itemId = id;
            cfg.title = id;
            cfg.closable = true;
            tab = tabs.add(cfg);

            tabs.setActiveTab(tab);

        }
    },

    closeTab: function(id) {
        var tabs = this.lookupReference('maintabeditpanel');
        var tab = tabs.items.getByKey(id);

        if(tab) {
            for(i=0; i<tabs.items.length; i++) {
                var itemId = tabs.items.items[i].itemId;

                if(id == itemId) {
                    tabs.items.items[i].close();
                }
            }
        }
    },

    onHomeTabMouseOver: function(button, e, eOpts) {
        button.setIconCls('left_menu_home_btn_over');
    },

    onHomeTabMouseOut: function(button, e, eOpts) {
        if(button.active) {

            button.setIconCls('left_menu_home_btn_over');

        } else {

            button.setIconCls('left_menu_home_btn');

        }
    },

    onHomeTabDeactivate: function(tab, eOpts) {
        tab.setIconCls('left_menu_home_btn');
    },

    onHomeTabClick: function(button, e, eOpts) {
        var tabs	= this.lookupReference('tabpanelTitle');
        tabs.setTitle('Home');

        var homeMain	= this.lookupReference('homeMain');
        var manualMain	= this.lookupReference('manualMain');
        var wizardMain	= this.lookupReference('wizardMain');

        homeMain.show();
        manualMain.hide();
        wizardMain.hide();


        /*var tabs	= this.lookupReference('homemainpanel');
        tabs.removeAll();

        var homeMain = {
        xtype: 'homemain'
        };
        homeMain.title = 'Home';

        var homeEditTab = tabs.add(homeMain);
        tabs.setActiveTab(homeEditTab);*/
    },

    onManualTabMouseOver: function(button, e, eOpts) {
        button.setIconCls('left_menu_manual_btn_over');
    },

    onManualTabMouseOut: function(button, e, eOpts) {
        if(button.active) {

            button.setIconCls('left_menu_manual_btn_over');

        } else {

            button.setIconCls('left_menu_manual_btn');

        }
    },

    onManualTabDeactivate: function(tab, eOpts) {
        tab.setIconCls('left_menu_manual_btn');
    },

    onManualTabClick: function(button, e, eOpts) {
        var tabs	= this.lookupReference('tabpanelTitle');
        tabs.setTitle('Manual');

        var homeMain	= this.lookupReference('homeMain');
        var manualMain	= this.lookupReference('manualMain');
        var wizardMain	= this.lookupReference('wizardMain');

        homeMain.hide();
        manualMain.show();
        wizardMain.hide();
    },

    onWizardTabMouseOver: function(button, e, eOpts) {
        button.setIconCls('left_menu_wizard_btn_over');
    },

    onWizardTabMouseOut: function(button, e, eOpts) {

        if(button.active) {

            button.setIconCls('left_menu_wizard_btn_over');

        } else {

            button.setIconCls('left_menu_wizard_btn');

        }
    },

    onWizardTabDeactivate: function(tab, eOpts) {
        tab.setIconCls('left_menu_wizard_btn');
    },

    onWizardTabClick: function(button, e, eOpts) {
        var tabs	= this.lookupReference('tabpanelTitle');
        tabs.setTitle('Wizard');

        var homeMain	= this.lookupReference('homeMain');
        var manualMain	= this.lookupReference('manualMain');
        var wizardMain	= this.lookupReference('wizardMain');

        homeMain.hide();
        manualMain.hide();
        wizardMain.show();
    },

    onFormTabpanelSubRemoveAll: function(form) {
        this.fireViewEvent('tabpanelRemoveAll', this, null);
    },

    onTabpanelTabpanelSubRemoveAll1: function(tabpanel) {
        this.fireViewEvent('tabpanelRemoveAll', this, null);
    }

});
