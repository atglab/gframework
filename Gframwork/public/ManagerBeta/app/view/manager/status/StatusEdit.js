/*
 * File: app/view/manager/status/StatusEdit.js
 *
 * This file was generated by Sencha Architect version 3.2.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('GFManager.view.manager.status.StatusEdit', {
    extend: 'Ext.form.Panel',
    alias: 'widget.statusedit',

    requires: [
        'GFManager.view.manager.status.StatusEditViewModel',
        'GFManager.view.manager.status.StatusEditViewController',
        'Ext.toolbar.Toolbar',
        'Ext.button.Button',
        'Ext.form.FieldSet',
        'Ext.form.field.TextArea',
        'Ext.form.RadioGroup',
        'Ext.form.field.Radio',
        'Ext.form.field.ComboBox',
        'Ext.view.BoundList',
        'Ext.XTemplate',
        'Ext.grid.Panel',
        'Ext.form.field.Number',
        'Ext.grid.column.Action',
        'Ext.grid.plugin.RowEditing',
        'Ext.form.Label',
        'GFManager.view.manager.point.PointList'
    ],

    controller: 'statustedit',
    viewModel: {
        type: 'statustedit'
    },
    modelValidation: true,
    scrollable: 'true',
    bodyPadding: '10 10 10 10',

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    bind: {
        title: '{theStatus.name}'
    },
    items: [
        {
            xtype: 'fieldcontainer',
            maxWidth: 700,
            layout: {
                type: 'hbox',
                align: 'stretch',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'toolbar',
                    items: [
                        {
                            xtype: 'button',
                            baseCls: 'edit_save_btn',
                            overCls: 'edit_save_btn_over',
                            iconCls: '',
                            listeners: {
                                click: 'onStatusSaveButtonClick'
                            }
                        },
                        {
                            xtype: 'button',
                            baseCls: 'edit_cancel_btn',
                            overCls: 'edit_cancel_btn_over',
                            iconCls: '',
                            listeners: {
                                click: 'onStatusCancelButtonClick'
                            }
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'fieldset',
            maxWidth: 700,
            width: '',
            title: '상세 정보',
            layout: {
                type: 'vbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'textfield',
                    reference: 'statusID',
                    maxWidth: 700,
                    fieldLabel: 'ID*',
                    allowBlank: false,
                    emptyText: '1~20자 이내의 ID를 입력하세요.',
                    maxLength: 20,
                    minLength: 1,
                    regex: /^[A-Za-z]/,
                    vtype: 'alphanum',
                    bind: {
                        value: '{theStatus.id}'
                    },
                    listeners: {
                        beforerender: 'onStatusIDTextfieldBeforeRender'
                    }
                },
                {
                    xtype: 'textfield',
                    fieldLabel: '이름*',
                    emptyText: '1~20자 이내의 이름을 입력하세요.',
                    maxLength: 20,
                    minLength: 1,
                    bind: {
                        value: '{theStatus.name}'
                    }
                },
                {
                    xtype: 'textareafield',
                    flex: 1,
                    height: 60,
                    maxHeight: 60,
                    fieldLabel: '설명*',
                    emptyText: '1~1000자 이내의 설명을 입력하세요.',
                    bind: {
                        value: '{theStatus.description}'
                    }
                },
                {
                    xtype: 'radiogroup',
                    reference: 'relation_method',
                    fieldLabel: '연동방식*',
                    items: [
                        {
                            xtype: 'radiofield',
                            name: 'method',
                            boxLabel: 'Point',
                            inputValue: 'point_type'
                        },
                        {
                            xtype: 'radiofield',
                            name: 'method',
                            boxLabel: 'Level',
                            inputValue: 'level_type'
                        },
                        {
                            xtype: 'radiofield',
                            name: 'method',
                            boxLabel: 'Mission',
                            inputValue: 'mission_type'
                        }
                    ],
                    listeners: {
                        change: 'onStatusRadiogroupChange',
                        beforerender: 'onStatusRadiogroupBeforeRender'
                    }
                },
                {
                    xtype: 'combobox',
                    flex: 1,
                    reference: 'relation_factor',
                    fieldLabel: '연동요소*',
                    submitValue: false,
                    editable: false,
                    emptyText: '연동요소를 리스트에서 선택하세요.',
                    displayField: 'name',
                    valueField: 'id',
                    bind: {
                        value: '{theStatus.relation_object}'
                    },
                    listeners: {
                        select: 'onRelationFactorComboboxSelect'
                    },
                    listConfig: {
                        xtype: 'boundlist',
                        itemSelector: 'div',
                        itemTpl: [
                            '<tpl if="{icon}">       ',
                            '    <img src="{icon}" align=left width=20 height=20/> &nbsp; {name}        ',
                            '<tpl else>							        ',
                            '    {name}            ',
                            '</tpl>'
                        ]
                    }
                },
                {
                    xtype: 'fieldcontainer',
                    flex: 1,
                    fieldLabel: '등급표*',
                    layout: {
                        type: 'hbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'combobox',
                            flex: 1,
                            reference: 'repoStatus_combo',
                            editable: false,
                            emptyText: '등급',
                            displayField: 'name',
                            store: 'RepoStatus',
                            valueField: 'id'
                        },
                        {
                            xtype: 'combobox',
                            flex: 1,
                            reference: 'difficulty',
                            margin: '0 30 0 30',
                            editable: false,
                            emptyText: '난이도',
                            displayField: 'name',
                            store: [
                                [
                                    '5',
                                    '난이도 최상'
                                ],
                                [
                                    '4',
                                    '난이도 상'
                                ],
                                [
                                    '3',
                                    '난이도 중'
                                ],
                                [
                                    '2',
                                    '난이도 하'
                                ],
                                [
                                    '1',
                                    '난이도 최하'
                                ]
                            ],
                            valueField: 'id'
                        },
                        {
                            xtype: 'button',
                            flex: 1,
                            allowDepress: false,
                            text: '불러오기',
                            listeners: {
                                click: 'onStatusLoadButtonClick'
                            }
                        }
                    ]
                },
                {
                    xtype: 'gridpanel',
                    reference: 'subStatusGridPanel',
                    stateful: true,
                    border: false,
                    cls: 'panel_color',
                    margin: '10 10 10 100',
                    modelValidation: false,
                    padding: '1 1 0 1',
                    columnLines: true,
                    deferRowRender: true,
                    enableColumnHide: false,
                    forceFit: true,
                    store: 'StatusClass',
                    columns: [
                        {
                            xtype: 'gridcolumn',
                            sortable: true,
                            dataIndex: 'rank',
                            text: '순번',
                            editor: {
                                xtype: 'numberfield'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            sortable: true,
                            dataIndex: 'name',
                            text: '등급 명',
                            editor: {
                                xtype: 'textfield'
                            }
                        },
                        {
                            xtype: 'gridcolumn',
                            reference: 'condition',
                            sortable: true,
                            dataIndex: 'condition',
                            text: '획득 조건'
                        },
                        {
                            xtype: 'actioncolumn',
                            renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                                this.icon = ''+value;
                                this.tooltip = ''+value;
                            },
                            itemId: 'myactioncolumn',
                            align: 'center',
                            dataIndex: 'icon',
                            text: '아이콘'
                        },
                        {
                            xtype: 'actioncolumn',
                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                Ext.getStore('StatusClass').removeAt(rowIndex);

                                var statusData = view.up().up().up().getViewModel().get('theStatus').data;

                                for(i=0; i<statusData.classes.length; i++) {
                                    if(statusData.classes[i].name == record.get('name')) {
                                        view.up().up().up().getViewModel().get('theStatus').data.classes.splice(i,1);
                                    }

                                }
                            },
                            align: 'center',
                            menuDisabled: true,
                            iconCls: 'manager-delete'
                        }
                    ],
                    listeners: {
                        afterrender: 'onStatusGridpanelAfterRender'
                    },
                    plugins: [
                        {
                            ptype: 'rowediting'
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'fieldcontainer',
            height: 120,
            maxWidth: 700,
            width: 700,
            layout: {
                type: 'hbox',
                align: 'stretch',
                pack: 'end'
            },
            items: [
                {
                    xtype: 'label',
                    style: {
                        color: 'red'
                    },
                    text: '(*)필수 입력'
                }
            ]
        }
    ],
    listeners: {
        show: 'onStatusFormShow',
        deactivate: 'onStatusFormDeactivate'
    }

});